// @/utils/amplifyServerUtils.ts

/**
 * This file provides utility functions for server-side operations using AWS Amplify
 * with Next.js. It includes functions for managing server-side authentication
 * using cookies and for retrieving the currently authenticated user.
 */

import { cookies } from 'next/headers';
import { createServerRunner } from '@aws-amplify/adapter-nextjs';
import { generateServerClientUsingCookies } from '@aws-amplify/adapter-nextjs/api';
import { getCurrentUser } from 'aws-amplify/auth/server';
import { type Schema } from '@/amplify/data/resource';
import outputs from '@/amplify_outputs.json';

/**
 * Creates a server runner with the Amplify configuration.
 * This function enables running server-side operations within the Amplify context.
 * The configuration is derived from the `outputs` file generated by AWS Amplify.
 */
export const { runWithAmplifyServerContext } = createServerRunner({
  config: outputs,
});

/**
 * Generates a server-side Amplify client that uses cookies for authentication.
 * This client allows authenticated API requests from the server, using the provided cookies
 * to maintain user sessions.
 */
export const cookiesClient = generateServerClientUsingCookies<Schema>({
  config: outputs,
  cookies,
});

/**
 * AuthGetCurrentUserServer
 * ------------------------
 * Retrieves the currently authenticated user on the server by executing a server-side
 * operation in the Amplify context. If the user is authenticated, their details are returned.
 * If an error occurs or the user is not authenticated, it returns `null`.
 *
 * @async
 * @returns {Promise<any | null>} - Returns the current authenticated user object if available, otherwise `null`.
 */
export async function AuthGetCurrentUserServer() {
  try {
    const currentUser = await runWithAmplifyServerContext({
      nextServerContext: { cookies },
      operation: (contextSpec) => getCurrentUser(contextSpec),
    });
    return currentUser;
  } catch (error) {
    console.error('Error retrieving the current user:', error);
    return null;
  }
}
